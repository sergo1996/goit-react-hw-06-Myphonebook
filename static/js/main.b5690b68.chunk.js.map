{"version":3,"sources":["Component/ContactForm/ContactForm.module.scss","Component/ContactListItem/ContactListItem.module.scss","Component/Filter/Filter.module.scss","Component/Title/trans.module.css","Component/Title/Phonebook.module.scss","Component/ContactList/ContactList.module.scss","Component/Title/Phonebook.js","redux/contacts/contactsActions.js","Component/ContactForm/ContactForm.js","c:/Users/serhiy/Desktop/toggle+6.zip/src/redux/contacts/contactsActions.js","Component/ContactListItem/ContactListItem.js","Component/ContactList/ContactList.js","Component/Filter/Filter.js","Component/Section/Section.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","Component/Section/Section.module.css"],"names":["module","exports","Title","CSSTransition","in","appear","classNames","trans","timeout","className","styles","title","addContact","createAction","name","number","payload","contact","id","uuidv4","Number","deleteContact","handleChangeFilter","handleChangetheme","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","alert","props","onAddContact","this","contactForm","onSubmit","input","type","onChange","required","addBtn","Component","mapDispatchToProps","contactsActions","connect","ownProps","item","contacts","items","find","theme","changethem","dispatch","delCont","listItem","darck","button","onClick","normalizedFilter","filter","toLowerCase","includes","map","list","onChangeFilter","section","label","Section","light","dark","themeSelector","switch","checked","toggleTheme","slider","children","React","length","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5690b68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1eZcN\",\"input\":\"ContactForm_input__21XG7\",\"addBtn\":\"ContactForm_addBtn__1egNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3y1yZ\",\"darck\":\"ContactListItem_darck__1HE0z\",\"contact\":\"ContactListItem_contact__1CBdi\",\"button\":\"ContactListItem_button__i8uXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Filter_section__3y4rc\",\"label\":\"Filter_label__3DhT5\",\"input\":\"Filter_input__1C0_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"trans_appear__P-0z2\",\"appearActive\":\"trans_appearActive__2kz3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__2sKKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1-t6Y\"};","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport trans from \"./trans.module.css\";\r\nimport styles from \"./Phonebook.module.scss\";\r\n\r\nconst Title = () => (\r\n  <CSSTransition in={true} appear classNames={trans} timeout={500}>\r\n    <h1 className={styles.title}>Phonebook</h1>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Title;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number: Number(number),\r\n    },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst handleChangeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nconst handleChangetheme = createAction(\"contacts/changeTheme\");\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  handleChangeFilter,\r\n  handleChangetheme,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./ContactForm.module.scss\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions.js\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Перевірка на ввід числа\r\n    if (!Number(this.state.number)) {\r\n      alert(\"В полі Number було введено не число, повторіть спробу\");\r\n\r\n      this.setState({\r\n        number: \"\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button className={styles.addBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    contact: {\n      id: uuidv4(),\n      name,\n      number: Number(number)\n    }\n  }\n}));\n\nconst deleteContact = createAction(\"contacts/delete\");\n\nconst handleChangeFilter = createAction(\"contacts/changeFilter\");\n\nconst handleChangetheme = createAction(\"contacts/changeTheme\");\n\nexport default {\n  addContact,\n  deleteContact,\n  handleChangeFilter,\n  handleChangetheme\n};\n","import React from \"react\";\nimport styles from \"./ContactListItem.module.scss\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport contactsActions from \"c:/Users/serhiy/Desktop/toggle+6.zip/src/redux/contacts/contactsActions\";\n\nconst ContactListItem = ({ name, number, delCont, theme }) => (\n  <li className={theme ? styles.listItem : styles.darck}>\n    <p className={styles.contact}>\n      <span>{name}:</span> {number}\n    </p>\n\n    <button type=\"button\" className={styles.button} onClick={delCont}>\n      &#10006;\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  delCont: PropTypes.func,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const item = state.contacts.items.find((item) => item.id === ownProps.id);\n\n  return { ...item, theme: state.contacts.changethem };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  delCont: () => dispatch(contactsActions.deleteContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <section>\r\n    {contacts.map((contact) => (\r\n      <ContactListItem\r\n        className={styles.list}\r\n        key={contact.id}\r\n        id={contact.id}\r\n      />\r\n    ))}\r\n  </section>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filteredContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: filteredContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nlet Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <br />\r\n        <input\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          value={filter}\r\n          name=\"filter\"\r\n          type=\"text\"\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.handleChangeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n","//Core\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\n//Styles\r\nimport styles from \"./Section.module.css\";\r\n\r\nclass Section extends React.Component {\r\n  render() {\r\n    return (\r\n      <section\r\n        className={this.props.theme === true ? styles.light : styles.dark}\r\n      >\r\n        <div className={styles.themeSelector}>\r\n          <span className={styles.label}>Theme: </span>\r\n          <label className={styles.switch}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={this.props.theme}\r\n              onChange={() => this.props.toggleTheme(!this.props.theme)}\r\n            />\r\n            <span className={styles.slider}></span>\r\n          </label>\r\n        </div>\r\n\r\n        {this.props.children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  theme: state.contacts.changethem\r\n});\r\nconst mapDispatchToProps = {\r\n  toggleTheme: contactsActions.handleChangetheme\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Section);\r\n\r\n// //Core\r\n// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\n// //Styles\r\n// import styles from \"./Section.module.css\";\r\n\r\n// class Section extends React.Component {\r\n//   state = {\r\n//     theme: true\r\n//   };\r\n\r\n//   toggleTheme = () => this.setState((prev) => ({ theme: !prev.theme }));\r\n\r\n//   render() {\r\n//     return (\r\n//       <section\r\n//         className={this.state.theme === true ? styles.light : styles.dark}\r\n//       >\r\n//         <div className={styles.themeSelector}>\r\n//           <span className={styles.label}>Theme: </span>\r\n//           <label className={styles.switch}>\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               checked={this.state.theme}\r\n//               onChange={this.toggleTheme}\r\n//             />\r\n//             <span className={styles.slider}></span>\r\n//           </label>\r\n//         </div>\r\n//         {this.props.children}\r\n//       </section>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// Section.propTypes = {\r\n//   children: PropTypes.node.isRequired\r\n// };\r\n// export default Section;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\n\n//Components\nimport Title from \"./Component/Title/Phonebook\";\nimport ContactForm from \"./Component/ContactForm/ContactForm\";\nimport ContactList from \"./Component/ContactList/ContactList\";\nimport Filter from \"./Component/Filter/Filter\";\nimport Section from \"./Component/Section/Section\";\n\nfunction App({ value, filter }) {\n  return (\n    <Section>\n      <Title />\n      <ContactForm />\n      <ContactList />\n      {(value.length > 1 || filter) && <Filter />}\n    </Section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport contactsActions from \"./contactsActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload.contact];\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: addContact,\r\n  [contactsActions.deleteContact]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.handleChangeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nconst changethem = createReducer(true, {\r\n  [contactsActions.handleChangetheme]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  changethem,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"Section_light__166ze\",\"dark\":\"Section_dark__m79Cf\",\"themeSelector\":\"Section_themeSelector__21GMF\",\"label\":\"Section_label__muJDo\",\"switch\":\"Section_switch__3GAcA\",\"slider\":\"Section_slider__1nfE9\"};"],"sourceRoot":""}