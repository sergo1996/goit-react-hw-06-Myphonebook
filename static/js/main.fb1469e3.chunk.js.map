{"version":3,"sources":["Component/ContactListItem/ContactListItem.module.scss","Component/Filter/Filter.module.scss","Component/Title/trans.module.css","Component/Title/Phonebook.module.scss","Component/ContactList/ContactList.module.scss","Component/Title/Phonebook.js","redux/contacts/contactsActions.js","Component/ContactForm/ContactForm.js","Component/ContactListItem/ContactListItem.js","Component/ContactList/ContactList.js","Component/Filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","Component/ContactForm/ContactForm.module.scss"],"names":["module","exports","Title","CSSTransition","in","appear","classNames","trans","timeout","className","styles","title","addContact","createAction","name","number","payload","contact","id","uuidv4","Number","deleteContact","handleChangeFilter","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","contactForm","onSubmit","input","type","onChange","required","addBtn","Component","mapDispatchToProps","contactsActions","connect","ownProps","item","contacts","items","find","dispatch","delCont","listItem","listItemInfo","btn","onClick","normalizedFilter","filter","toLowerCase","includes","map","list","onChangeFilter","section","label","length","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb1469e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3y1yZ\",\"btn\":\"ContactListItem_btn__2r6EF\",\"margin\":\"ContactListItem_margin__2Edj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Filter_section__3y4rc\",\"label\":\"Filter_label__3DhT5\",\"input\":\"Filter_input__1C0_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"trans_appear__P-0z2\",\"appearActive\":\"trans_appearActive__2kz3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__2sKKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1-t6Y\"};","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport trans from \"./trans.module.css\";\r\nimport styles from \"./Phonebook.module.scss\";\r\n\r\nconst Title = () => (\r\n  <CSSTransition in={true} appear classNames={trans} timeout={500}>\r\n    <h1 className={styles.title}>Phonebook</h1>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Title;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number: Number(number),\r\n    },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst handleChangeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContact, deleteContact, handleChangeFilter };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./ContactForm.module.scss\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions.js\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button className={styles.addBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./ContactListItem.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nconst ContactListItem = ({ name, number, delCont }) => (\r\n  <li className={styles.listItem}>\r\n    <p className={styles.listItemInfo}>{name}:</p>\r\n    <p className={styles.listItemInfo}>{number}</p>\r\n    <button className={styles.btn} onClick={delCont}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  delCont: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find((item) => item.id === ownProps.id);\r\n\r\n  return { ...item };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  delCont: () => dispatch(contactsActions.deleteContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <section>\r\n    {contacts.map((contact) => (\r\n      <ContactListItem\r\n        className={styles.list}\r\n        key={contact.id}\r\n        id={contact.id}\r\n      />\r\n    ))}\r\n  </section>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filteredContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: filteredContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\n\r\nlet Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <br />\r\n        <input\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          value={filter}\r\n          name=\"filter\"\r\n          type=\"text\"\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.handleChangeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\n// import { CSSTransition } from \"react-transition-group\";\nimport Title from \"./Component/Title/Phonebook\";\nimport ContactForm from \"./Component/ContactForm/ContactForm\";\nimport ContactList from \"./Component/ContactList/ContactList\";\nimport Filter from \"./Component/Filter/Filter\";\nimport { connect } from \"react-redux\";\n// import Notification from \"./Component/Notification/Notification\";\n// import notifyTransitions from \"./transition.module.scss\";\n\n// import { v4 as uuidv4 } from \"uuid\";\n\nfunction App({ value }) {\n  // console.log(value);\n  return (\n    <div>\n      <Title />\n      <ContactForm />\n      <ContactList />\n      {value.length > 1 && <Filter />}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//     notification: false,\n//   };\n\n//   componentDidMount() {\n//     const persistedContacts = localStorage.getItem(\"contacts\");\n//     if (persistedContacts) {\n//       this.setState({\n//         contacts: JSON.parse(persistedContacts),\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = (name, number) => {\n//     if (this.state.contacts.find((contact) => name === contact.name)) {\n//       return this.setState({ notification: true });\n//     }\n\n//     const contact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n\n//     this.setState((prevState) => {\n//       return {\n//         contacts: [...prevState.contacts, contact],\n//         notification: false,\n//       };\n//     });\n//   };\n\n//   isAlready = () => {\n//     this.setState({ notification: false });\n//   };\n\n//   handleChangeFilter = (event) => {\n//     event.persist();\n//     this.setState(() => {\n//       return { filter: event.target.value };\n//     });\n//   };\n\n//   filteredContact = () => {\n//     const { contacts, filter } = this.state;\n//     return contacts.filter((contacts) =>\n//       contacts.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   };\n\n//   deleteContact = (contactId) => {\n//     this.setState(() => {\n//       return {\n//         contacts: this.state.contacts.filter(\n//           (contact) => contact.id !== contactId\n//         ),\n//       };\n//     });\n//   };\n\n//   render() {\n//     const { filter, notification, contacts } = this.state;\n\n//     return (\n//       <div>\n//         <Title />\n\n//         <CSSTransition\n//           in={notification}\n//           classNames={notifyTransitions}\n//           timeout={250}\n//           unmountOnExit\n//         >\n//           <Notification isAlready={this.isAlready} />\n//         </CSSTransition>\n\n//         <ContactForm onAddContact={this.addContact} />\n\n//         {contacts.length > 1 && (\n//           <Filter\n//             handleChangeFilter={this.handleChangeFilter}\n//             filter={filter}\n//           />\n//         )}\n//         <ContactList\n//           contacts={this.filteredContact()}\n//           deleteContact={this.deleteContact}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import { combineReducers } from \"redux\";\r\nimport contactsActions from \"./contactsActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload.contact];\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: addContact,\r\n  [contactsActions.deleteContact]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.handleChangeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1eZcN\",\"contactFormItem\":\"ContactForm_contactFormItem__Wgs74\",\"input\":\"ContactForm_input__21XG7\",\"addBtn\":\"ContactForm_addBtn__1egNT\"};"],"sourceRoot":""}